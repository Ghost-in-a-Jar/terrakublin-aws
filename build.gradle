
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id 'com.palantir.docker' version '0.22.1'
    id 'com.palantir.docker-run' version '0.22.1'
    id 'com.palantir.docker-test-runner' version '0.22.1'
}

apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = "com.terrakublin.Application.main"

sourceSets {
    main.kotlin.srcDirs = [ 'src' ]
    test.kotlin.srcDirs = [ 'test' ]
    main.resources.srcDirs = [ 'resources' ]
}

docker {
    name System.getenv("IMAGE_NAME")
}

dockerRun {
    name 'terrakublin-container'
    image System.getenv("IMAGE_NAME")
    ports '80:8080'
    command "java", "-server", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-XX:InitialRAMFraction=2", "-XX:MinRAMFraction=2", "-XX:MaxRAMFraction=2", "-XX:+UseG1GC", "-XX:MaxGCPauseMillis=100", "-XX:+UseStringDeduplication", "-jar", "terrakublin.jar"
}

dockerTestRunner {
    dockerFiles fileTree(project.rootDir) {
        include '**/Dockerfile'
    }
}

repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-auth:$ktor_version"
    compile "io.ktor:ktor-locations:$ktor_version"
    compile "io.ktor:ktor-html-builder:$ktor_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "org.ehcache:ehcache:3.0.0.m4"
    compile "com.google.code.gson:gson:2.7"
    testCompile "io.ktor:ktor-server-test-host:$ktor_version"
    testCompile "io.mockk:mockk:$mockk_version"
}

